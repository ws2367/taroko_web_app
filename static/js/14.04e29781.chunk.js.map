{"version":3,"sources":["routes/client/components/TagMultipleSelect.js","routes/client/components/CreatableMultiTagAutocomplete.js","routes/client/components/RelatedClientField.js","routes/client/components/Profile.js","routes/client/components/NoteDrawer.js","routes/client/components/NoteList.js","routes/client/components/Client.js","routes/client/components/StatBoxes1.js","routes/client/components/EnhancedTableElements.js","routes/client/components/ClientDrawer.js","routes/client/components/Tag.js","routes/client/components/ClientList.js","routes/client/index.js"],"names":["MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","TagMultipleSelect_MultipleSelect","MultipleSelect","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","getTagName","id","tagOptions","find","tag","name","handleDelete","tagId","newTags","state","tags","filter","n","setState","onChange","target","value","handleChange","event","console","log","_this2","_this$props","classes","theme","title","react_default","a","createElement","className","root","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","multiple","input","Input_default","renderValue","selected","chips","map","Chip_default","key","label","chip","onDelete","MenuItem_default","fontWeight","undefined","indexOf","typography","fontWeightRegular","fontWeightMedium","Checkbox_default","checked","Component","components_TagMultipleSelect","Object","styles","display","flexWrap","margin","spacing","unit","minWidth","maxWidth","withTheme","CreatableMultiTagAutocomplete_CreatableMultiTagAutocomplete","getOptionLabel","option","options","isLoading","convertTagsToOptions","convertOptionsToTags","o","newValue","actionMeta","group","concat","action","groupEnd","handleCreate","inputValue","handleCreateTag","then","newTag","error","_this$state","react_select_browser_esm","variant","isClearable","isMulti","formatCreateLabel","isDisabled","onCreateOption","react","RelationDialog","handleClose","handleClick","open","relations","Dialog_default","onClose","aria-labelledby","DialogTitle_default","List_default","keys","relationId","ListItem_default","button","onClick","ListItemText_default","primary","RelatedClientField_RelatedClientField","clientId","openDialog","newClientName","relatedClients","related","relation","convertValueToTags","newRelation","pop","updateRelation","handleCloseDialog","handleClickDialog","length","createClient","newClientOption","Fragment","Profile_Loader","Profile_styles","container","textField","marginLeft","marginRight","longTextField","menu","leftIcon","Profile_BasicInfoTextFields","config","profile","addToConfig","noValidate","autoComplete","TextField_default","required","InputLabelProps","shrink","placeholder","type","birthday","email","cell_phone","company","address","select","String","income","SelectProps","helperText","k","source","interests","Profile_InsuranceInfoTextFields","_this$props2","is_insured","insurance_companies","insurances_of_interest","Profile_FinancialPlanTextFields","_this$props3","multiline","fullWidth","financial_plan","Profile_FamilyInfoTextFields","_this$props4","clientOptions","marital_status","related_clients","client_relation","Profile_AppendixTextFields","_this$props5","appendix","StyledBasicInfoTextFields","StyledInsuranceInfoTextFields","StyledFinancialPlanTextFields","StyledFamilyInfoTextFields","StyledAppendixTextFields","components_Profile","Profile","Profile_classCallCheck","Profile_possibleConstructorReturn","Profile_getPrototypeOf","fetchClient","fetch","method","mode","headers","Auth","res","json","result","client","clients","isLoaded","c","handlers","updateClientName","oldClientOptions","Promise","resolve","reject","body","JSON","stringify","url","newTagObject","_defineProperty","item","push","nextProps","nextState","core_index_es","justify","NoteDrawer_QuoteNoteFields","_ref","note","Typography_default","gutterBottom","additional_data","sent_time","sent_content","NoteDrawer_CommonNoteFields","_ref2","location","date","NoteDrawer_ClaimNoteFields","_ref3","claim_time","claim_content","NoteDrawer_SigningNoteFields","_ref4","signed_time","signed_content","NoteDrawer_GenericNoteFields","_ref5","current_insurance","NoteDrawer_CustomNoteFields","_ref6","note_type","NoteDrawer_NoteDrawer","NoteDrawer_objectSpread","isAdditionalData","handleSave","handleSaveNote","preventDefault","handleDeleteNote","isOpen","Drawer_default","anchor","divContainer","InputProps","fontSize","Button_default","color","OutlinedButton","components_NoteDrawer","NoteList_CreateNoteButton","AnchorEl","anchorEl","currentTarget","handleMenuItemClick","openDrawer","noteTypes","aria-controls","aria-haspopup","Menu_default","keepMounted","Boolean","noteTypeId","NoteList_NoteList","collectionEndpoint","_this3","notes","openNoteDrawer","selectedNote","0","1","2","3","4","fetchNotes","drawerKey","Math","random","handleNoteClick","noteId","ok","index","findIndex","t","splice","newNote","endpoint","oldNote","NoteList_objectSpread","_this4","Paper_default","Grid_default","align","secondary","noWrap","ListItemSecondaryAction_default","IconButton_default","edge","aria-label","Visibility_default","components_NoteList","backgroundColor","palette","background","paper","heading","pxToRem","components_Client","Client","Client_classCallCheck","Client_possibleConstructorReturn","Client_getPrototypeOf","fetchTasks","tasks","handleTabChange","tabIndex","handleChangeIndex","pathname","replace","es","Tabs_default","Tab_default","lib_default","onChangeIndex","TaskList","StatBoxes1","MaterialIcon","icon","columnData","numeric","disablePadding","EnhancedTableElements_EnhancedTableHead","createSortHandler","property","onRequestSort","onSelectAllClick","order","orderBy","numSelected","rowCount","TableHead_default","TableRow_default","TableCell_default","padding","indeterminate","column","sortDirection","Tooltip_default","placement","enterDelay","TableSortLabel_default","active","direction","EnhancedTableElements_EnhancedTableToolbar","filters","handleDeleteClients","handleQueryChange","handleFilterChange","Toolbar_default","classnames_default","highlight","spacer","actions","Delete_default","startAdornment","InputAdornment_default","position","Search_default","paddingRight","main","colorManipulator","light","text","dark","flex","components_ClientDrawer","ClientDrawer","ClientDrawer_classCallCheck","ClientDrawer_possibleConstructorReturn","ClientDrawer_getPrototypeOf","toggleClientDrawer","toggleDrawer","_this$state2","components_Tag","i","getClientData","field","ClientList_ClientList","ClientList","ClientList_classCallCheck","ClientList_possibleConstructorReturn","ClientList_getPrototypeOf","openClientDrawer","handleRequestSort","handleSelectAllClick","selectedIndex","newSelected","slice","clientSearchMatch","query","incomeConfig","note_summary","reduce","sum","toLowerCase","includes","promises","forEach","all","clientIds","unfilteredClients","clientFilterMatch","tagIds","foundMatch","filteredClients","handleChangePage","page","handleChangeRowsPerPage","rowsPerPage","isSelected","ClientList_objectSpread","removeTagFromClient","filterByTag","emptyRows","min","tableWrapper","Table_default","table","TableBody_default","sort","b","getSorting","hover","role","aria-checked","component","scope","Link","to","updated","height","colSpan","TablePagination_default","count","labelRowsPerPage","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","StyledClientList","marginTop","overflowX","components_ClientList","withRouter","client_ClientsPage","ClientsPage","client_classCallCheck","client_possibleConstructorReturn","client_getPrototypeOf","history","match","Switch","Route","path"],"mappings":"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","file":"static/js/14.04e29781.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 400,\n    maxWidth: '80%',\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing.unit / 4,\n  },\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass MultipleSelect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tags: props.tags || []\n    };\n  }\n\n  getTagName = id => {\n    return this.props.tagOptions.find(tag => tag.id == id).name;\n  }\n\n  handleDelete = tagId => () => {\n    var newTags = this.state.tags.filter( n => n !== tagId );\n    this.setState({ tags: newTags });\n    this.props.onChange && this.props.onChange({target: {value: newTags }}); // first part is like an if.\n  }\n\n  handleChange = event => {\n    console.log(event.target);\n    this.setState({ tags: event.target.value });\n    this.props.onChange && this.props.onChange(event); // first part is like an if.\n  };\n\n  render() {\n    const { classes, theme, tagOptions, title } = this.props;\n    const {tags} = this.state;\n\n    return (\n      <div className={classes.root}>\n        <FormControl className={classes.formControl}>\n          {title && <InputLabel htmlFor=\"select-multiple-chip\">{title}</InputLabel>}\n          <Select\n            multiple\n            value={tags}\n            onChange={this.handleChange}\n            input={<Input id=\"select-multiple-chip\" />}\n            renderValue={selected => (\n              <div className={classes.chips}>\n                {selected.map(tagId => <Chip key={tagId} label={this.getTagName(tagId)} className={classes.chip} onDelete={this.handleDelete(tagId)} />)}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {tagOptions.map(tag => (\n              <MenuItem\n                key={tag.id}\n                value={tag.id}\n                style={{\n                  fontWeight:\n                    tags.indexOf(tag.id) === undefined\n                      ? theme.typography.fontWeightRegular\n                      : theme.typography.fontWeightMedium,\n                }}\n              >\n                <Checkbox checked={tags.indexOf(tag.id) > -1} />\n                {tag.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n    );\n  }\n}\n\n\nMultipleSelect.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nconst TagMultipleSelect = withStyles(styles, { withTheme: true })(MultipleSelect);\n\nexport default TagMultipleSelect;\n","import React, { Component } from 'react';\n\nimport CreatableSelect from 'react-select/creatable';\n\ntype State = {\n  value: string | void,\n};\n\n\nexport default class CreatableMultiTagAutocomplete extends Component<*, State> {\n  getOptionLabel = (id) => {\n    let option = this.props.options.find(option => option.id === id);\n    return option ? option.name : id;\n  }\n\n  state = {\n    isLoading: false,\n    value: this.props.tags.map(tagId => ({\n      value: tagId,\n      label: this.getOptionLabel(tagId)\n    }) )\n  };\n\n  convertTagsToOptions = (tags) => {\n    // restructure tags as options\n    return tags.map(tag => ({label: tag.name, value: tag.id}) );\n  }\n\n  convertOptionsToTags = (options) => {\n    return (options && options.map(o => o.value)) || [];\n  }\n\n  handleChange = (newValue: any, actionMeta: any) => {\n    console.group('Value Changed');\n    console.log(newValue);\n    console.log(`action: ${actionMeta.action}`);\n    console.groupEnd();\n    this.setState({ value: newValue });\n    this.props.handleChange( {target: {value: this.convertOptionsToTags(newValue)} });\n  };\n\n  handleCreate = (inputValue: any) => {\n    this.setState({ isLoading: true });\n    console.group('Creating option');\n    console.log(inputValue);\n    console.groupEnd();\n    this.props.handleCreateTag(inputValue).then(\n      (newTag) => {\n        console.log(newTag);\n        this.setState({ isLoading: false });\n        // fake it like internal input\n        var newValue = this.state.value;\n        this.handleChange(newValue.concat(this.convertTagsToOptions([newTag])), {action: 'create-option'});\n      },\n      (error) => {}\n    )\n\n  };\n\n  render() {\n    const { isLoading, value } = this.state;\n    // CreateableSelect assumes the structure of label and value\n    const options = this.convertTagsToOptions(this.props.options);\n\n    return (\n      <CreatableSelect\n        variant='standard'\n        isClearable\n        isMulti\n        formatCreateLabel={this.props.formatCreateLabel}\n        isDisabled={isLoading}\n        isLoading={isLoading}\n        onChange={this.handleChange}\n        onCreateOption={this.handleCreate}\n        options={options}\n        value={value}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport CreatableSelect from 'react-select/creatable';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\n\n\nfunction RelationDialog(props) {\n  const { handleClose, handleClick, open, relations } = props;\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">選擇關係</DialogTitle>\n      <List>\n        {Object.keys(relations).map((relationId) => (\n          <ListItem button onClick={() => handleClick(relationId)} key={relationId}>\n            <ListItemText primary={relations[relationId]} />\n          </ListItem>\n        ))}\n      </List>\n    </Dialog>\n  );\n}\n\nRelationDialog.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  relations: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired\n};\n\ntype State = {\n  value: string | void,\n};\n\n\nexport default class RelatedClientField extends Component<*, State> {\n  getOptionLabel = (clientId, relationId) => {\n    let relatedClient = this.props.options.find(option => option.id === clientId);\n    return relatedClient.name + \"(\" + this.props.relations[relationId] + \")\";\n  }\n\n  state = {\n    openDialog: false,\n    isLoading: false,\n    newClientName: null,\n    value: (this.props.relatedClients || []).map(related => ({\n      relation: related.relation,\n      value: related.id,\n      label: this.getOptionLabel(related.id, related.relation)\n    }) )\n  };\n\n  convertTagsToOptions = (tags) => {\n    // restructure tags as options\n    return tags.map(tag => ({label: tag.name, value: tag.id}) );\n  }\n\n  convertValueToTags = (options) => {\n    return (options && options.map(\n      o => ({\n        relation: o.relation,\n        id: o.value\n      })\n    )) || [];\n  }\n\n  handleChange = (newValue: any, actionMeta: any) => {\n    console.group('Value Changed');\n    console.log(newValue);\n    console.log(`action: ${actionMeta.action}`);\n    console.groupEnd();\n    if (actionMeta.action === 'select-option') {\n      // fire up the dialog\n      this.setState({openDialog: true, newRelation: newValue.pop()});\n    } else {\n      this.setState({ value: newValue});\n      this.props.onChange({target: {value: this.convertValueToTags(newValue)}});\n    }\n  };\n\n  handleCreate = (inputValue: any) => {\n    this.setState({ isLoading: true, newClientName: inputValue});\n    console.group('Creating option');\n    console.log(inputValue);\n    console.groupEnd();\n    this.setState({openDialog: true});\n    // this.props.handleCreateTag(inputValue).then(\n    //   (newTag) => {\n    //     console.log(newTag);\n    //     this.setState({ isLoading: false });\n    //     // fake it like internal input\n    //     var newValue = this.state.value;\n    //     this.handleChange(newValue.concat(this.convertTagsToOptions([newTag])), {action: 'create-option'});\n    //   },\n    //   (error) => {}\n    // )\n  };\n\n  updateRelation = (newRelation) => {\n    let newValue = this.state.value.concat(newRelation);\n    // update state\n    this.setState({\n      value: newValue,\n      openDialog: false,\n      isLoading: false,\n      newClientName: null,\n      newRelation: null\n    });\n\n    // create relation\n    this.props.onChange({target: {value: this.convertValueToTags(newValue)} });\n  }\n\n  handleCloseDialog = event => {\n    this.setState({\n      openDialog: false,\n      isLoading: false,\n      newClientName: null,\n      newRelation: false});\n  };\n\n  handleClickDialog = relationId => {\n    // create client if needed\n    if (this.state.newClientName && this.state.newClientName.length > 0) {\n      // this is to create new client\n      this.props.createClient({name: this.state.newClientName}).then(\n        (newClientOption) => {\n          console.group(\"Add New Client\");\n          console.log(newClientOption);\n          console.log(relationId);\n          console.groupEnd();\n          // set relation\n          this.updateRelation({\n            relation: relationId,\n            value: newClientOption.id,\n            label: this.state.newClientName + \"(\" + this.props.relations[relationId] + \")\"\n          });\n        }\n      );\n    } else {\n      // this is to add existing client\n      console.group(\"Add Existing Client\");\n      console.log(this.state.newRelation);\n      console.log(relationId);\n      console.groupEnd();\n      this.updateRelation({\n        value: this.state.newRelation.value,\n        label: this.getOptionLabel(this.state.newRelation.value, relationId),\n        relation: relationId\n      });\n    }\n  };\n\n  render() {\n    const { isLoading, value, openDialog } = this.state;\n    const { relations } = this.props;\n    // CreateableSelect assumes the structure of label and value\n    const options = this.convertTagsToOptions(this.props.options);\n    console.log(this.props.relatedClients);\n    return (\n      <>\n        <RelationDialog\n          open={openDialog}\n          relations={relations}\n          handleClose={this.handleCloseDialog}\n          handleClick={this.handleClickDialog}\n        />\n        <CreatableSelect\n          variant='standard'\n          isClearable\n          isMulti\n          formatCreateLabel={this.props.formatCreateLabel}\n          isDisabled={isLoading}\n          isLoading={isLoading}\n          onChange={this.handleChange}\n          onCreateOption={this.handleCreate}\n          options={options}\n          value={value}\n        />\n      </>\n    );\n  }\n}\n","import React, {Fragment} from 'react';\nimport QueueAnim from 'rc-queue-anim';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport { DatePicker } from 'material-ui-pickers';\nimport { Grid } from '@material-ui/core';\nimport TagMultipleSelect from './TagMultipleSelect';\nimport CreatableMultiTagAutocomplete from './CreatableMultiTagAutocomplete';\nimport RelatedClientField from './RelatedClientField';\nimport \"../../feedback/routes/loaders/components/loaders/loaders.scss\";\nimport {requestHeaders} from 'auth/Auth';\n\nconst Loader = () => (\n  <div className=\"ball-grid-pulse\">\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n)\n\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: '40%',\n  },\n  longTextField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: '90%',\n  },\n  menu: {\n    width: 200,\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit,\n  },\n});\n\n\nclass BasicInfoTextFields extends React.Component {\n\n  render() {\n    const { classes, config, profile, handleChange, handleCreateTag, addToConfig } = this.props;\n\n    return (\n      <Fragment>\n        <form className={classes.container} noValidate autoComplete=\"off\">\n          <TextField\n            required\n            id=\"name\"\n            label=\"姓名\"\n            className={classes.textField}\n            value={profile.name}\n            onChange={handleChange('name')}\n            margin=\"normal\"\n          />\n          <div className=\"picker\">\n            <TextField\n              InputLabelProps={{ shrink: true }}\n              placeholder=\"請選生日\"\n              type='date'\n              label=\"生日\"\n              value={profile.birthday}\n              onChange={handleChange('birthday')}\n              margin=\"normal\"\n            />\n          </div>\n          <CreatableMultiTagAutocomplete\n          title='標籤'\n          formatCreateLabel={(inputValue) => (\"新增標籤：\" + inputValue)}\n          tags={profile.tags}\n          options={config.tags}\n          handleCreateTag={handleCreateTag('tags')}\n          handleChange={handleChange('tags')}\n          label=\"Tag\"\n          />\n          <div className=\"divider\" />\n          <TextField\n            id=\"email\"\n            label=\"Email\"\n            type=\"email\"\n            value={profile.email}\n            className={classes.textField}\n            onChange={handleChange('email')}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"cell_phone\"\n            label=\"電話號碼\"\n            className={classes.textField}\n            onChange={handleChange('cell_phone')}\n            value={profile.cell_phone}\n            type=\"tel\"\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"company\"\n            label=\"任職公司/職稱\"\n            value={profile.company}\n            className={classes.textField}\n            onChange={handleChange('company')}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"address\"\n            label=\"地址\"\n            value={profile.address}\n            className={classes.textField}\n            onChange={handleChange('address')}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"income\"\n            select\n            label=\"月收入\"\n            className={classes.textField}\n            value={String(profile.income)}\n            onChange={handleChange('income')}\n            SelectProps={{\n              MenuProps: {\n                className: classes.menu,\n              },\n            }}\n            helperText=\"請選擇收入\"\n            margin=\"normal\"\n          >\n            {Object.keys(config.income).map( k => (\n              <MenuItem key={k} value={k}>\n                {config.income[k]}\n              </MenuItem>\n            ))}\n          </TextField>\n          <TextField\n            id=\"source\"\n            select\n            label=\"認識方式\"\n            className={classes.textField}\n            value={String(profile.source)}\n            onChange={handleChange('source')}\n            SelectProps={{\n              MenuProps: {\n                className: classes.menu,\n              },\n            }}\n            helperText=\"請選擇認識方式\"\n            margin=\"normal\"\n          >\n            {Object.keys(config.source).map(k => (\n              <MenuItem key={k} value={k}>\n                {config.source[k]}\n              </MenuItem>\n            ))}\n          </TextField>\n          <CreatableMultiTagAutocomplete\n            id=\"interests\"\n            title='休閒興趣'\n            formatCreateLabel={(inputValue) => (\"新增休閒興趣：\" + inputValue)}\n            tags={profile.interests}\n            options={config.interests}\n            handleCreateTag={handleCreateTag('interests')}\n            handleChange={handleChange('interests')}\n            label=\"Interests\"\n          />\n        </form>\n      </Fragment>\n    );\n  }\n}\n\nclass InsuranceInfoTextFields extends React.Component {\n\n\n  render() {\n    const { classes, config, profile, handleChange, handleCreateTag, addToConfig } = this.props;\n\n    return (\n      <form className={classes.container} noValidate autoComplete=\"off\">\n        <TextField\n          select\n          id=\"is_insured\"\n          label=\"有保險？\"\n          className={classes.textField}\n          value={String(profile.is_insured)}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          onChange={handleChange('is_insured')}\n          margin=\"normal\"\n        >\n          {Object.keys(config.is_insured).map( k => (\n            <MenuItem key={k} value={k}>\n              {config.is_insured[k]}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TagMultipleSelect\n          id=\"insurance_companies\"\n          title='投保公司'\n          tags={profile.insurance_companies}\n          tagOptions={config.insurance_companies}\n          onChange={handleChange('insurance_companies')}\n          label=\"投保公司\"\n        />\n        <TagMultipleSelect\n          id=\"insurances_of_interest\"\n          title='有興趣保險種類'\n          tags={profile.insurances_of_interest}\n          tagOptions={config.insurances_of_interest}\n          onChange={handleChange('insurances_of_interest')}\n          label=\"有興趣保險種類\"\n        />\n      </form>\n    );\n  }\n}\n\n\n\nclass FinancialPlanTextFields extends React.Component {\n\n\n  render() {\n    const { classes, config, profile, handleChange, handleCreateTag, addToConfig } = this.props;\n\n    return (\n      <form className={classes.container} noValidate autoComplete=\"off\">\n        <TextField\n          multiline\n          InputLabelProps={{\n            shrink: true,\n          }}\n          fullWidth\n          id=\"financial_plan\"\n          value={profile.financial_plan || undefined}\n          onChange={handleChange('financial_plan')}\n          className={classes.longTextField}\n          margin=\"normal\"\n          variant='outlined'\n        />\n      </form>\n    );\n  }\n}\n\n\nclass FamilyInfoTextFields extends React.Component {\n\n\n  render() {\n    const { classes, config, profile, clientOptions, handleChange, createClient, addToConfig } = this.props;\n\n    return (\n      <form className={classes.container} noValidate autoComplete=\"off\">\n        <TextField\n          select\n          id=\"marital_status\"\n          label=\"婚姻狀況\"\n          value={String(profile.marital_status)}\n          className={classes.longTextField}\n          onChange={handleChange('marital_status')}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          margin=\"normal\"\n        >\n          {Object.keys(config.marital_status).map(k => (\n            <MenuItem key={k} value={k}>\n              {config.marital_status[k]}\n            </MenuItem>\n          ))}\n        </TextField>\n        <RelatedClientField\n          title='延伸親友名單'\n          relatedClients={profile.related_clients}\n          relations={config.client_relation}\n          options={clientOptions}\n          createClient={createClient}\n          onChange={handleChange('related_clients')}\n          id=\"related_clients\"\n        />\n\n      </form>\n    );\n  }\n}\n\n\nclass AppendixTextFields extends React.Component {\n  render() {\n    const { classes, config, profile, handleChange, handleCreateTag, addToConfig } = this.props;\n\n    return (\n      <form className={classes.container} noValidate autoComplete=\"off\">\n        <TextField\n          multiline\n          InputLabelProps={{\n            shrink: true,\n          }}\n          fullWidth\n          id=\"appendix\"\n          label=\"備註\"\n          variant='outlined'\n          value={profile.appendix || undefined}\n          className={classes.longTextField}\n          margin=\"normal\"\n        />\n      </form>\n    );\n  }\n}\n\n\nconst StyledBasicInfoTextFields = withStyles(styles)(BasicInfoTextFields);\nconst StyledInsuranceInfoTextFields = withStyles(styles)(InsuranceInfoTextFields);\nconst StyledFinancialPlanTextFields = withStyles(styles)(FinancialPlanTextFields);\nconst StyledFamilyInfoTextFields = withStyles(styles)(FamilyInfoTextFields);\nconst StyledAppendixTextFields = withStyles(styles)(AppendixTextFields);\n\n\n\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.props.clientId !== nextProps.clientId || nextState !== this.state;\n  }\n\n\n  componentDidMount() {\n    this.fetchClient(this.props.clientId);\n  }\n\n  fetchClient = (clientId) => {\n    fetch(\"https://api.cooby.co/clients/\", {\n      \"method\": \"GET\",\n      mode: 'cors',\n      headers: requestHeaders()\n    }).then(res => res.json())\n      .then(\n        (result) => {\n          let client = result.clients.filter( client => client.profile.id === clientId )[0];\n\n          this.setState({\n            isLoaded: true,\n            profile: client.profile,\n            clientOptions: result.clients.map(c => ({id: c.profile.id, name: c.profile.name} )),\n            config: result.config\n          });\n\n          this.props.handlers.updateClientName(client.profile.name);\n        },\n        (error) => {\n          this.setState({\n            isLoaded: false,\n            error\n          });\n        });\n  };\n\n  createClient = (profile) => {\n    var oldClientOptions = this.state.clientOptions;\n    return new Promise((resolve, reject) => {\n      fetch(\"https://api.cooby.co/clients/\", {\n        method: \"POST\",\n        mode: 'cors',\n        headers: requestHeaders(),\n        body: JSON.stringify(profile)\n      }).then(res => res.json())\n        .then(\n          (result) => {\n            console.log(result);\n            let newClientOption = {\n              id: result.id,\n              name: profile.name\n            };\n            let clientOptions = oldClientOptions.concat();\n            this.setState({ clientOptions });\n            resolve(newClientOption);\n          },\n         (error) => {\n           console.log(error);\n           reject(error);\n        }\n       );\n    });\n\n  };\n\n  handleCreateTag = (key) => (newTag) => {\n      let url = \"https://api.cooby.co/\" + key + \"/\";\n      return new Promise((resolve, reject) => {\n        fetch(url, {\n          method: \"POST\",\n          mode: 'cors',\n          headers: requestHeaders(),\n          body: JSON.stringify({name: newTag})\n        }).then(res => res.json())\n          .then(\n            (result) => {\n              var newTagObject = {id: result.id, name: newTag};\n              this.addToConfig(key, newTagObject);\n              resolve(newTagObject);\n            },\n            (error) => {\n              this.setState({error});\n              reject(error);\n            });\n      });\n  }\n\n  handleChange = name => event => {\n    var value = event.target.value;\n    this.setState( state => {\n      var p = state.profile;\n\n      return {\n        profile: {\n          ...p,\n          [name]: value\n        }\n      };\n    });\n\n    var profile = {\n      id: this.state.profile.id,\n      [name]: value\n    }\n\n    // one-way only. doesn't update React data\n    fetch(\"https://api.cooby.co/clients/\" + profile.id, {\n      \"method\": \"PUT\",\n      mode: 'cors',\n      headers: requestHeaders(),\n      body: JSON.stringify(profile)\n    }).then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n    });\n\n    name == 'name' && this.props.handlers.updateClientName(value);\n  };\n\n  addToConfig = (key, item) => {\n    let config = this.state.config;\n    config[key].push(item);\n    this.setState({config: config});\n  }\n\n\n  render() {\n    const {isLoaded, profile, config, clientOptions} = this.state;\n    const {clientId} = this.props;\n\n\n    if (!isLoaded) {\n       return (\n         <Grid container justify=\"center\">\n           <div className='m-10'>\n             <Loader />\n           </div>\n         </Grid>\n       )\n     } else {\n      return (\n        <div className=\"container-fluid\">\n          <article className=\"article pt-3\">\n            <div className=\"row\">\n              <div className=\"col-xl-6\">\n                <div className=\"box box-default mb-3\">\n                  <div className=\"box-header\">基本資料</div>\n                  <div className=\"box-divider\"></div>\n                  <div className=\"box-body\">\n                    <StyledBasicInfoTextFields\n                      key={clientId}\n                      profile={profile}\n                      config={config}\n                      handleChange={this.handleChange}\n                      addToConfig={this.addToConfig}\n                      handleCreateTag={this.handleCreateTag}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"box box-default mb-3\">\n                  <div className=\"box-header\">保險狀況</div>\n                  <div className=\"box-divider\"></div>\n                  <div className=\"box-body\">\n                    <StyledInsuranceInfoTextFields\n                      key={clientId}\n                      profile={profile}\n                      config={config}\n                      handleChange={this.handleChange}\n                      addToConfig={this.addToConfig}\n                      handleCreateTag={this.handleCreateTag}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-xl-6\">\n                <div className=\"box box-default mb-3\">\n                  <div className=\"box-header\">財務規劃</div>\n                  <div className=\"box-divider\"></div>\n                  <div className=\"box-body\">\n                    <StyledFinancialPlanTextFields\n                      key={clientId}\n                      profile={profile}\n                      config={config}\n                      handleChange={this.handleChange}\n                      addToConfig={this.addToConfig}\n                      handleCreateTag={this.handleCreateTag}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"box box-default mb-3\">\n                  <div className=\"box-header\">婚姻與家庭</div>\n                  <div className=\"box-divider\"></div>\n                  <div className=\"box-body\">\n                    <StyledFamilyInfoTextFields\n                      key={clientId}\n                      profile={profile}\n                      config={config}\n                      clientOptions={clientOptions}\n                      handleChange={this.handleChange}\n                      addToConfig={this.addToConfig}\n                      createClient={this.createClient}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"box box-default mb-3\">\n                  <div className=\"box-header\">備註</div>\n                  <div className=\"box-divider\"></div>\n                  <div className=\"box-body\">\n                    <StyledAppendixTextFields\n                      key={clientId}\n                      profile={profile}\n                      config={config}\n                      handleChange={this.handleChange}\n                      addToConfig={this.addToConfig}\n                    />\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </article>\n        </div>\n      )\n    }\n  }\n}\n\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Drawer from '@material-ui/core/Drawer';\nimport OutlinedButton from 'components/OutlinedButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  divContainer: {\n    width: '200px',\n    margin: '20px'\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    minWidth: 150,\n    width: '40%',\n  },\n  longTextField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    minWidth: 300,\n    width: '90%',\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  }\n});\n\n\nconst QuoteNoteFields = ({note, classes, handleChange}) => (\n  <>\n    <Typography variant=\"subheading\" gutterBottom>\n      遞送細節\n    </Typography>\n    <TextField\n      id=\"sent_time\"\n      label=\"遞送日期\"\n      type='date'\n      value={note.additional_data.sent_time}\n      className={classes.textField}\n      onChange={handleChange(true, 'sent_time')}\n      margin=\"normal\"\n    />\n    <TextField\n      id=\"sent_content\"\n      label=\"遞送內容\"\n      value={note.additional_data.sent_content}\n      className={classes.longTextField}\n      onChange={handleChange(true, 'sent_content')}\n      margin=\"normal\"\n    />\n  </>\n)\n\n\nconst CommonNoteFields = ({note, classes, handleChange}) => (\n  <>\n    <TextField\n      label=\"地點\"\n      className={classes.textField}\n      value={note.location}\n      onChange={handleChange(false, 'location')}\n      margin=\"normal\"\n    />\n    <TextField\n      required\n      id=\"date\"\n      label=\"日期\"\n      type='date'\n      value={note.date}\n      className={classes.textField}\n      onChange={handleChange(false, 'date')}\n      margin=\"normal\"\n    />\n    <TextField\n      id=\"appendix\"\n      label=\"備註\"\n      value={note.appendix}\n      variant='outlined'\n      className={classes.longTextField}\n      onChange={handleChange(false, 'appendix')}\n      margin=\"normal\"\n    />\n  </>\n)\n\n\nconst ClaimNoteFields = ({note, classes, handleChange}) => (\n  <>\n    <Typography variant=\"subheading\" gutterBottom>\n      理賠細節\n    </Typography>\n    <TextField\n      id=\"claim_time\"\n      label=\"理賠日期\"\n      type='date'\n      value={note.additional_data.claim_time}\n      className={classes.textField}\n      onChange={handleChange(true, 'claim_time')}\n      margin=\"normal\"\n    />\n    <TextField\n      id=\"claim_content\"\n      label=\"理賠內容\"\n      value={note.additional_data.claim_content}\n      className={classes.longTextField}\n      onChange={handleChange(true, 'claim_content')}\n      margin=\"normal\"\n    />\n  </>\n)\n\nconst SigningNoteFields = ({note, classes, handleChange}) => (\n  <>\n    <Typography variant=\"subheading\" gutterBottom>\n      簽約細節\n    </Typography>\n    <TextField\n      id=\"signed_time\"\n      label=\"簽約日期\"\n      type='date'\n      value={note.additional_data.signed_time}\n      className={classes.textField}\n      onChange={handleChange(true, 'signed_time')}\n      margin=\"normal\"\n    />\n    <TextField\n      id=\"signed_content\"\n      label=\"簽約內容\"\n      value={note.additional_data.signed_content}\n      className={classes.longTextField}\n      onChange={handleChange(true, 'signed_content')}\n      margin=\"normal\"\n    />\n  </>\n)\n\n\n\nconst GenericNoteFields = ({note, classes, handleChange}) => (\n  <TextField\n    id=\"current_insurance\"\n    label=\"保險狀況\"\n    value={note.additional_data.current_insurance}\n    className={classes.longTextField}\n    onChange={handleChange(true, 'current_insurance')}\n    margin=\"normal\"\n  />\n)\n\nconst CustomNoteFields = ({note, classes, handleChange}) => {\n  switch(String(note.note_type)) {\n    case \"1\":\n      return (<GenericNoteFields note={note} classes={classes} handleChange={handleChange} />)\n      break;\n    case \"2\":\n      return (<QuoteNoteFields note={note} classes={classes} handleChange={handleChange} />)\n      break;\n    case \"3\":\n      return (<SigningNoteFields note={note} classes={classes} handleChange={handleChange} />)\n      break;\n    case \"4\":\n      return (<ClaimNoteFields note={note} classes={classes} handleChange={handleChange} />)\n      break;\n    default:\n      // code block\n      return (<></>)\n  }\n}\n\n\n\n\n// Avoid derived state from props:\n// https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#common-bugs-when-using-derived-state\nclass NoteDrawer extends React.Component {\n  // this needs to be deep copy!\n  state = { note: ({...this.props.note, additional_data: {...this.props.note.additional_data} } || {additional_data: {}}) };\n\n\n  handleChange = (isAdditionalData, name) => event => {\n    var note = this.state.note;\n\n    if (isAdditionalData) {\n      note.additional_data[name] = event.target.value;\n    } else {\n      note[name] = event.target.value;\n    }\n\n    this.setState({ note });\n  };\n\n  handleSave = event => {\n    this.props.handleSaveNote(this.state.note);\n  }\n\n\n  handleDelete = (event) => {\n    event.preventDefault();\n    this.props.handleDeleteNote(this.state.note.id);\n  }\n\n\n  render() {\n    const { note } = this.state;\n    const { mode, classes, isOpen, handleClose, config } = this.props;\n\n    return (\n      <Drawer anchor=\"right\" open={isOpen} onClose={handleClose}>\n          <div className={classes.divContainer}>\n          <Typography variant=\"title\" gutterBottom>\n            {mode === \"create\" ? \"新增會議記錄\" : \"編輯會議記錄\"}\n          </Typography>\n          <TextField\n            label=\"標題\"\n            className={classes.textField}\n            InputProps={{\n              classes: {\n                input: {fontSize: 50}\n              }\n            }}\n            value={note.title}\n            onChange={this.handleChange(false, 'title')}\n            margin=\"normal\"\n          />\n\n          <Typography variant=\"subheading\" gutterBottom>\n            {config.note_type[note.note_type]}\n          </Typography>\n\n            <form className={classes.container} noValidate>\n              <CommonNoteFields note={note} classes={classes} handleChange={this.handleChange} />\n              <CustomNoteFields note={note} classes={classes} handleChange={this.handleChange} />\n            </form>\n            <div className=\"divider\" />\n            {mode === \"edit\" &&\n              <Button color=\"primary\" onClick={this.handleDelete}>刪除</Button>\n            }\n            <OutlinedButton color=\"secondary\" className=\"btn-w-md\" onClick={handleClose}>取消</OutlinedButton>\n            <div className=\"divider\" />\n            <Button variant=\"contained\" color=\"primary\" className=\"btn-w-md\" onClick={this.handleSave}>\n              儲存</Button>\n          </div>\n      </Drawer>\n    )\n  };\n}\n\nNoteDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n\nconst StyledNoteDrawer = withStyles(styles)(NoteDrawer);\n\nexport default StyledNoteDrawer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Typography from '@material-ui/core/Typography';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport NoteDrawer from './NoteDrawer';\nimport {requestHeaders} from 'auth/Auth';\n\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: '100%',\n  },\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  date: {\n    fontSize: theme.typography.pxToRem(13),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n});\n\n\n\nclass CreateNoteButton extends React.Component {\n  state = {\n    AnchorEl: null\n  }\n\n  handleClick = (event) => {\n    this.setState({anchorEl: event.currentTarget});\n  };\n\n  handleClose = () => {\n    this.setState({anchorEl: null});\n  };\n\n  handleMenuItemClick = (event) => {\n    this.setState({anchorEl: null});\n    this.props.openDrawer({note_type: event.target.value, additional_data: {}});\n  }\n\n  render() {\n    const { anchorEl } = this.state;\n    const { noteTypes } = this.props;\n    return(\n      <>\n        <Button\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"btn-w-md\"\n          onClick={this.handleClick}>\n          新增會議紀錄\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={this.handleClose}\n        >\n          {Object.keys(noteTypes).map( noteTypeId => (\n            <MenuItem key={noteTypeId} value={noteTypeId} onClick={this.handleMenuItemClick}>\n              {noteTypes[noteTypeId]}\n            </MenuItem>\n          ))}\n        </Menu>\n\n      </>\n    )\n  }\n};\n\n\nclass NoteList extends React.Component {\n  collectionEndpoint = 'https://api.cooby.co/clients/' + this.props.clientId + '/notes/';\n\n  state = {\n    notes: [],\n    mode: 'create',\n    openNoteDrawer: false,\n    selectedNote: {additional_data: {}},\n    config: {note_type: {\n      \"0\":\"空白筆記\",\n      \"1\":\"一般筆記\",\n      \"2\":\"遞送建議書\",\n      \"3\":\"保險簽約\",\n      \"4\":\"保險理賠\"\n    }}\n  }\n\n  componentDidMount() {\n    this.fetchNotes();\n  }\n\n  fetchNotes = () => {\n    fetch(this.collectionEndpoint, {\n      \"method\": \"GET\",\n      mode: 'cors',\n      headers: requestHeaders()\n    }).then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            notes: result.notes\n          });\n        },\n        (error) => {\n          this.setState({\n            error\n          });\n        }\n      )\n  };\n\n  openDrawer = (mode) => (selectedNote) => {\n    console.log(selectedNote);\n    console.log(mode);\n    this.setState({\n      openNoteDrawer: true,\n      selectedNote: selectedNote,\n      mode: mode,\n      drawerKey: selectedNote.id ? selectedNote.id : Math.random()\n    });\n  }\n\n  handleNoteClick = (selectedNote) => (event) => {\n    console.log(selectedNote);\n    this.openDrawer('edit')(selectedNote);\n  }\n\n  handleClose = () => {\n    this.setState({openNoteDrawer: false});\n  }\n\n  handleDeleteNote = (noteId) => {\n    let url = this.collectionEndpoint + noteId;\n    console.log(url);\n    fetch(url, {\n      \"method\": \"DELETE\",\n      mode: 'cors',\n      headers: requestHeaders(),\n      body: JSON.stringify({})\n    }).then(res => {\n      if (res.ok) {\n        let notes = this.state.notes;\n        let index = notes.findIndex(t => t.id === noteId);\n        notes.splice(index, 1);\n\n        this.setState({\n          notes: notes\n        });\n      } else {\n        res.json().then(error => {console.log(error)});\n        }\n      this.handleClose();\n      });\n  }\n\n  handleSaveNote = (newNote) => {\n    console.log(newNote);\n\n    let endpoint =\n      this.state.mode === \"edit\" ?\n      this.collectionEndpoint + newNote.id :\n      this.collectionEndpoint;\n\n    fetch(endpoint, {\n      method: ( this.state.mode === \"edit\" ? \"put\" : \"post\" ),\n      mode: 'cors',\n      headers: requestHeaders(),\n      body: JSON.stringify(newNote)\n    }).then(res => {\n      if (res.ok && this.state.mode === \"edit\") {\n        // put request returns empty string. can't call res.to_json()\n        console.log('edittttt');\n        return new Promise((resolve, reject) => {resolve({})} );\n      } else {\n        console.log('new!');\n        return res.json();\n      }\n    }).then(\n        (result) => {\n          console.log(result);\n          if (this.state.mode === \"edit\") {\n            // edit mode\n            var index = this.state.notes.findIndex(t => t.id === newNote.id);\n            if (index) {\n                var oldNote = this.state.notes[index];\n                var notes = this.state.notes;\n                notes[index] = {...oldNote, ...newNote};\n                this.setState({notes: notes});\n            }\n          } else {\n            // create mode\n            this.setState({\n              notes: this.state.notes.concat({\n                id: result.id,\n                ...newNote\n              })\n            });\n          }\n          this.handleClose();\n        },\n        (error) => {\n          console.log(error);\n          this.setState({ error });\n        }\n    );\n\n  };\n\n\n  render() {\n    const { notes, selectedNote, mode, openNoteDrawer, config, drawerKey } = this.state;\n    const { classes } = this.props;\n\n\n    return (\n      <Paper className={classes.root}>\n        <CreateNoteButton noteTypes={config.note_type} openDrawer={this.openDrawer('create')}  />\n\n          <NoteDrawer\n            key={drawerKey}\n            isOpen={openNoteDrawer}\n            mode={mode}\n            note={selectedNote}\n            handleClose={this.handleClose}\n            handleSaveNote={this.handleSaveNote}\n            handleDeleteNote={this.handleDeleteNote}\n            config={config} />\n              <List>\n              {\n                notes.map((note, index) => (\n                    <ListItem key={note.id}>\n                      <ListItemText\n                        primary={<Grid container justify=\"space-between\">\n                          <Typography\n                            display='inline'\n                            align='left'\n                            color=\"textPrimary\"\n                            variant=\"body1\">\n                            {note.title}\n                          </Typography>\n                          <Typography\n                            display='inline'\n                            align='right'\n                            variant='body1'\n                            color='textSecondary'>\n                            {note.date}\n                          </Typography>\n                        </Grid>}\n                        secondary={<Typography noWrap={true}>{note.appendix}</Typography>}\n                      />\n                      <ListItemSecondaryAction>\n                        <IconButton edge=\"end\" aria-label=\"view\" onClick={this.handleNoteClick(note)}>\n                          <VisibilityIcon />\n                        </IconButton>\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                ))\n              }\n              </List>\n    </Paper>\n    );\n  }\n}\n\nNoteList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst StyledNoteList = withStyles(styles)(NoteList);\n\nexport default StyledNoteList;\n","import React from 'react';\nimport QueueAnim from 'rc-queue-anim';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SwipeableViews from 'react-swipeable-views';\nimport Profile from './Profile';\nimport NoteList from './NoteList';\nimport TaskList from '../../task/components/TaskList';\nimport {requestHeaders} from 'auth/Auth';\n\n\nclass Client extends React.Component {\n  constructor(props) {\n    super(props);\n    // get Client ID\n    let clientId = this.props.location.pathname.replace('/app/client/', '');\n\n    this.state = {\n      clientId: clientId,\n      name: null,\n      error: null,\n      isLoaded: false,\n      tabIndex: 0,\n      handlers: {updateClientName: this.updateClientName}\n    }\n  }\n\n  updateClientName = (name) => {\n    // only update client name\n    this.setState({name: name});\n  };\n\n\n  fetchTasks = () => {\n    fetch(\"https://api.cooby.co/clients/\" + this.state.clientId + \"/tasks/\", {\n      \"method\": \"GET\",\n      mode: 'cors',\n      headers: requestHeaders()\n    }).then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            tasks: result.tasks\n          });\n        },\n        (error) => {\n          this.setState({\n            error\n          });\n        });\n  };\n\n\n  componentDidMount() {\n    this.fetchTasks();\n  }\n\n  handleTabChange = (event, value) => {\n    this.setState({ tabIndex: value });\n  };\n\n  handleChangeIndex = index => {\n    this.setState({ tabIndex: index });\n  };\n\n  render() {\n\n    const { clientId, name, tabIndex, isLoaded, handlers } = this.state;\n\n\n    const NoteTab = () => (\n      <div className=\"container-fluid no-breadcrumb container-mw-md chapter\">\n        <article className=\"article\">\n          <QueueAnim type=\"bottom\" className=\"ui-animate\">\n            <div key=\"1\" className=\"mb-3\"> <NoteList clientId={clientId}/> </div>\n          </QueueAnim>\n        </article>\n      </div>\n    )\n\n    const TaskTab = () => (\n      <div className=\"container-fluid pt-3\">\n        <TaskList />\n      </div>\n    )\n\n    return (\n      <section className=\"page-with-tabs\">\n        <QueueAnim type=\"bottom\" className=\"ui-animate\">\n          <div key=\"1\">\n            <div className=\"page-header-title\"> {name || \"未命名\"} </div>\n          </div>\n\n          <div key=\"2\">\n            <Tabs value={tabIndex} onChange={this.handleTabChange} className=\"page-tabs\">\n              <Tab label=\"基本資料\" />\n              <Tab label=\"會議記錄\" />\n              <Tab label=\"待辦事項\" />\n            </Tabs>\n            <SwipeableViews\n              index={tabIndex}\n              onChangeIndex={this.handleChangeIndex}\n            >\n              <Profile\n                clientId={clientId}\n                handlers={handlers}\n              />\n              <NoteTab />\n              <TaskTab clientId={this.state.clientId}/>\n            </SwipeableViews>\n          </div>\n        </QueueAnim>\n      </section>\n    );\n  }\n}\n\nexport default Client;\n","import React from 'react';\nimport MaterialIcon from 'components/MaterialIcon';\n\nconst Statboxes = () => (\n  <div className=\"row\">\n    <div className=\"col-xl-3 col-sm-6\">\n      <section className=\"number-card-v4 mdc-elevation--z1 mb-4\">\n        <div className=\"box-top\">\n          <div className=\"box-icon\">\n            <span className=\"icon-btn icon-btn-round bg-success text-white\">\n              <MaterialIcon icon=\"pageview\" />\n            </span>\n          </div>\n          <div className=\"box-info\">\n            <p className=\"info-desc\">客戶數量</p>\n            <p className=\"box-main-num\">+3</p>\n          </div>\n        </div>\n        <div className=\"box-bottom\">\n          <div className=\"box-left\">\n            <p className=\"info-desc\">Pages/Visit</p>\n            <p className=\"text-success\">8.55</p>\n          </div>\n          <div className=\"box-right\">\n            <p className=\"info-desc\">% New Vist</p>\n            <p className=\"text-success\">56.23%</p>\n          </div>\n        </div>\n      </section>\n    </div>\n    <div className=\"col-xl-3 col-sm-6\">\n      <section className=\"number-card-v4 mdc-elevation--z1 mb-4\">\n        <div className=\"box-top\">\n          <div className=\"box-icon\">\n            <span className=\"icon-btn icon-btn-round bg-info text-white\">\n              <MaterialIcon icon=\"people\" />\n            </span>\n          </div>\n          <div className=\"box-info\">\n            <p className=\"info-desc\">會議數量</p>\n            <p className=\"box-main-num\">+12</p>\n          </div>\n        </div>\n        <div className=\"box-bottom\">\n          <div className=\"box-left\">\n            <p className=\"info-desc\">AVG Visit Duration (s)</p>\n            <p className=\"text-info\">9.60</p>\n          </div>\n        </div>\n      </section>\n    </div>\n    <div className=\"col-xl-3 col-sm-6\">\n      <section className=\"number-card-v4 mdc-elevation--z1 mb-4\">\n        <div className=\"box-top\">\n          <div className=\"box-icon\">\n            <span className=\"icon-btn icon-btn-round bg-warning text-white\">\n              <MaterialIcon icon=\"attach_money\" />\n            </span>\n          </div>\n          <div className=\"box-info\">\n            <p className=\"info-desc\">待辦事項</p>\n            <p className=\"box-main-num\">21個完成</p>\n          </div>\n        </div>\n        <div className=\"box-bottom\">\n          <div className=\"box-left\">\n            <p className=\"info-desc\">Last Week</p>\n            <p className=\"text-warning\">26.80%</p>\n          </div>\n          <div className=\"box-right\">\n            <p className=\"info-desc\">Last Month</p>\n            <p className=\"text-warning\">39.33%</p>\n          </div>\n        </div>\n      </section>\n    </div>\n    <div className=\"col-xl-3 col-sm-6\">\n      <section className=\"number-card-v4 mdc-elevation--z1 mb-4\">\n        <div className=\"box-top\">\n          <div className=\"box-icon\">\n            <span className=\"icon-btn icon-btn-round bg-primary text-white\">\n              <MaterialIcon icon=\"shopping_cart\" />\n            </span>\n          </div>\n          <div className=\"box-info\">\n            <p className=\"info-desc\">下週行程</p>\n            <p className=\"box-main-num\">25.5%</p>\n          </div>\n        </div>\n        <div className=\"box-bottom\">\n          <div className=\"box-left\">\n            <p className=\"info-desc\">Last Week</p>\n            <p className=\"text-primary\">16.50%</p>\n          </div>\n          <div className=\"box-right\">\n            <p className=\"info-desc\">Last Month</p>\n            <p className=\"text-primary\">29.00%</p>\n          </div>\n        </div>\n      </section>\n    </div>\n  </div>\n);\n\nexport default Statboxes;\n","import React from 'react';\nimport MaterialIcon from 'components/MaterialIcon';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { withStyles } from '@material-ui/core/styles';\nimport TagMultipleSelect from './TagMultipleSelect';\nimport TableHead from '@material-ui/core/TableHead';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TextField from '@material-ui/core/TextField';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\n\nconst columnData = [\n  { id: 'name', numeric: false, disablePadding: true, label: '名字' },\n  { id: 'tags', numeric: false, disablePadding: false, label: '標籤' },\n  { id: 'company', numeric: false, disablePadding: false, label: '任職公司' },\n  { id: 'income', numeric: false, disablePadding: false, label: '收入' },\n  { id: 'note_summary', numeric: false, disablePadding: false, label: '筆記摘要' },\n  { id: 'updated', numeric: false, disablePadding: false, label: '更新時間' },\n];\n\nclass EnhancedTableHead extends React.Component {\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={numSelected === rowCount}\n              onChange={onSelectAllClick}\n            />\n          </TableCell>\n          {columnData.map(column => {\n            return (\n              <TableCell\n                key={column.id}\n                numeric={column.numeric}\n                padding={column.disablePadding ? 'none' : 'default'}\n                sortDirection={orderBy === column.id ? order : false}\n              >\n                <Tooltip\n                  title=\"排序\"\n                  placement={column.numeric ? 'bottom-end' : 'bottom-start'}\n                  enterDelay={300}\n                >\n                  <TableSortLabel\n                    active={orderBy === column.id}\n                    direction={order}\n                    onClick={this.createSortHandler(column.id)}\n                  >\n                    {column.label}\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n            );\n          }, this)}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst toolbarStyles = theme => ({\n  root: {\n    paddingRight: theme.spacing.unit,\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  actions: {\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n});\n\nlet EnhancedTableToolbar = props => {\n  const { classes, numSelected, filters, config, handleDeleteClients, handleQueryChange, handleFilterChange } = props;\n\n  return (\n    <Toolbar\n      className={classNames(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color=\"inherit\" variant=\"subheading\">\n            {numSelected} 個已選擇\n          </Typography>\n        ) : (\n          <Typography variant=\"title\" id=\"tableTitle\">\n            客戶列表\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title=\"刪除\">\n            <IconButton aria-label=\"Delete\">\n              <DeleteIcon onClick={handleDeleteClients}/>\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <>\n            <Tooltip title=\"標籤過濾\">\n              <TagMultipleSelect\n                id=\"tag_filter\"\n                tags={filters}\n                tagOptions={config.tags || []}\n                onChange={handleFilterChange}\n              />\n            </Tooltip>\n            <Tooltip>\n              <TextField\n                type=\"search\"\n                id=\"search-bar\"\n                variant=\"outlined\"\n                placeholder=\"搜尋客戶\"\n                onChange={handleQueryChange}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SearchIcon />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Tooltip>\n          </>\n        )}\n      </div>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n};\n\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\n\nexport {EnhancedTableHead, EnhancedTableToolbar};\n","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport OutlinedButton from 'components/OutlinedButton';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  divContainer: {\n    width: '400px',\n    margin: '20px'\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    width: '50px',\n  }\n});\n\nclass ClientDrawer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value\n    });\n  };\n\n  handleSave = (event) => {\n    console.log(this.state);\n    const { email, birthday, company, name } = this.state;\n    this.props.handlers.createClient({\n      name, email, birthday, company\n    });\n    this.props.toggleClientDrawer(false)();\n  };\n\n  toggleDrawer = (isOpen) => () => {\n    this.setState({ isOpen });\n  };\n\n  render() {\n    const classes = styles();\n    const { email, birthday, company, name } = this.state;\n    const { isOpen, toggleClientDrawer} = this.props;\n\n    return (\n      <Drawer anchor=\"right\" open={isOpen} onClose={toggleClientDrawer(false)}>\n          <div style={classes.divContainer}>\n          <Typography variant=\"h1\" gutterBottom>\n            新增客戶\n          </Typography>\n            <form className={classes.container} noValidate>\n              <TextField\n                required\n                label=\"姓名\"\n                className={classes.textField}\n                value={name}\n                onChange={this.handleChange('name')}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"birthday\"\n                label=\"生日\"\n                value={birthday}\n                className={classes.textField}\n                onChange={this.handleChange('birthday')}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                helperText=\"錯誤email格式\"\n                value={email}\n                className={classes.textField}\n                onChange={this.handleChange('email')}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"company\"\n                label=\"公司\"\n                value={company}\n                className={classes.textField}\n                onChange={this.handleChange('company')}\n                margin=\"normal\"\n              />\n            </form>\n            <div className=\"divider\" />\n            <OutlinedButton color=\"secondary\" className=\"btn-w-md\" onClose={toggleClientDrawer(false)}>取消</OutlinedButton>\n            <div className=\"divider\" />\n            <Button variant=\"contained\" color=\"primary\" className=\"btn-w-md\" onClick={this.handleSave}>\n              儲存</Button>\n          </div>\n      </Drawer>\n    )\n  };\n}\n\nexport default ClientDrawer;\n","import React from 'react';\nimport Chip from '@material-ui/core/Chip';\n\nfunction Tag({tags, config}) {\n\n  const handleClick = () => {\n\n  }\n\n  const getTagName = (tagId) => {\n    var matches = config.tags.filter(tag => tag.id === tagId);\n    return matches[0]['name'];\n  }\n\n  return (\n      (tags || [] ).map((tagId, i) => (\n        <Chip\n          key={i}\n          label={getTagName(tagId)}\n          className=\"table-chip bg-info px-2\"\n          onClick={handleClick}\n        />\n      ))\n  );\n}\n\nexport default Tag;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {EnhancedTableHead, EnhancedTableToolbar} from './EnhancedTableElements';\nimport ClientDrawer from './ClientDrawer';\nimport Tag from './Tag';\nimport {requestHeaders} from 'auth/Auth';\n\nfunction getClientData(client, field) {\n  return (field in client) ? client[field] : (field in client.profile ? client.profile[field] : null);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => ( getClientData(b, orderBy) < getClientData(a, orderBy) ? -1 : 1)\n    : (a, b) => ( getClientData(a, orderBy) < getClientData(b, orderBy) ? -1 : 1);\n}\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n  },\n  table: {\n    minWidth: 1020,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n});\n\n\nclass ClientList extends React.Component {\n  url = \"https://api.cooby.co/clients/\";\n\n  constructor(props) {\n    super(props);\n    console.log(requestHeaders());\n    // handlers\n    const createClient = (profile) => {\n      fetch(this.url, {\n        \"method\": \"POST\",\n        mode: 'cors',\n        headers: requestHeaders(),\n        body: JSON.stringify(profile)\n      }).then(res => res.json())\n        .then(\n          (result) => {\n            console.log(result);\n            this.setState({\n              clients: this.state.clients.concat({\n                note_summary: result.note_summary,\n                profile: {\n                  ...profile,\n                  id: result.id\n                }\n              })\n            });\n          });\n    };\n\n    const removeTagFromClient = (tag, client) => {\n\n    };\n\n    const filterByTag = (tag) => {\n\n    };\n\n    // state variables\n    this.state = {\n      openClientDrawer: false,\n      // ui state\n      order: 'asc',\n      orderBy: 'name',\n      selected: [],\n      page: 0,\n      rowsPerPage: 10,\n      error: null,\n      isLoaded: false,\n      filters: [],\n      // app data\n      clients: [],\n      filteredClients: [],\n      config: {},\n\n      //handlers\n      handlers: {\n          createClient,\n          removeTagFromClient,\n          filterByTag}\n    };\n  }\n\n\n  componentDidMount() {\n    fetch(this.url, {\n      \"method\": \"GET\",\n      mode: 'cors',\n      headers: requestHeaders()\n    }).then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            clients: result.clients,\n            unfilteredClients: result.clients,\n            config: result.config\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  toggleClientDrawer = (state) => () => {\n    this.setState({openClientDrawer: state});\n  }\n\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = 'desc';\n\n    if (this.state.orderBy === property && this.state.order === 'desc') {\n      order = 'asc';\n    }\n\n    this.setState({ order, orderBy });\n  };\n\n  handleSelectAllClick = (event, checked) => {\n    if (checked) {\n      this.setState(state => ({ selected: state.clients.map(n => n.profile.id) }));\n      return;\n    }\n    this.setState({ selected: [] });\n  };\n\n  handleClick = (event, id) => {\n    const { selected } = this.state;\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    this.setState({ selected: newSelected });\n  };\n\n  clientSearchMatch = (query, client) => {\n    let incomeConfig = this.state.config.income || {};\n    // search name, company, note_summary and income\n    let searchFields = [client.profile.name, client.profile.company, client.note_summary, incomeConfig[String(client.profile.income)]];\n    return searchFields.reduce((sum, value) => (\n        sum || (value && value.toLowerCase().includes(query.toLowerCase())) // make sure value isn't null; otherwise .includes breaks.\n    ), false);\n  }\n\n  handleDeleteClients = (event) => {\n\n    var promises = [];\n    this.state.selected.forEach(clientId => {\n      let endpoint = this.url + clientId;\n      promises.push(new Promise((resolve, reject) => {\n        fetch(endpoint, {\n          method: \"DELETE\",\n          mode: 'cors',\n          headers: requestHeaders()\n        }).then(res => {\n          if (res.ok) {\n            resolve(clientId);\n          } else {\n            res.json().then(error => {\n              console.log(error);\n              reject(error);\n            });\n            }\n          });\n      }));\n    });\n\n    Promise.all(promises).then((clientIds) => {\n      let clients = this.state.clients;\n      let selected = this.state.selected;\n      clientIds.forEach((clientId) => {\n        let index = clients.findIndex(c => c.profile.id === clientId);\n        clients.splice(index, 1);\n\n        let selectedIndex = selected.indexOf(clientId);\n        selected.splice(selectedIndex, 1);\n      });\n\n      this.setState({\n        clients: clients,\n        selected: selected\n      });\n    });\n  }\n\n  handleQueryChange = (event) => {\n    console.log(event.target.value);\n    if (event.target.value.length > 0) {\n      this.setState({\n        clients: this.state.unfilteredClients.filter(client => this.clientSearchMatch(event.target.value, client))\n      });\n    } else {\n      this.setState({\n        clients: this.state.unfilteredClients\n      });\n    }\n  }\n\n  clientFilterMatch = (tagIds, client) => {\n    return tagIds.reduce((foundMatch, tagId) => {\n      return foundMatch || client.profile.tags.includes(tagId);\n    }, false);\n  }\n\n  handleFilterChange = (event) => {\n    let tagIds = event.target.value;\n    if (event.target.value.length > 0) {\n      let filteredClients = this.state.unfilteredClients.filter(client => this.clientFilterMatch(tagIds, client));\n      console.log(filteredClients);\n      this.setState({\n        clients: filteredClients\n      });\n    } else {\n      this.setState({\n        clients: this.state.unfilteredClients\n      });\n    }\n  }\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  render() {\n    const { classes } = this.props;\n    const { clients, order, orderBy, selected, rowsPerPage, page, filters, config, handlers, openClientDrawer } = this.state;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, clients.length - page * rowsPerPage);\n\n    return (\n      <>\n        <Button variant=\"contained\" color=\"primary\" className=\"btn-w-md\" onClick={this.toggleClientDrawer(true)}>\n          新增客戶</Button>\n        <div className=\"divider\" />\n        <Paper className={classes.root}>\n          <ClientDrawer isOpen={openClientDrawer} toggleClientDrawer={this.toggleClientDrawer} handlers={handlers} />\n          <EnhancedTableToolbar\n            numSelected={selected.length}\n            filters={filters}\n            config={config}\n            handleDeleteClients={this.handleDeleteClients}\n            handleQueryChange={this.handleQueryChange}\n            handleFilterChange={this.handleFilterChange} />\n          <div className={classes.tableWrapper}>\n            <Table className={classes.table} aria-labelledby=\"tableTitle\">\n              <EnhancedTableHead\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={this.handleSelectAllClick}\n                onRequestSort={this.handleRequestSort}\n                rowCount={clients.length}\n              />\n              <TableBody>\n                {clients\n                  .sort(getSorting(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map(n => {\n                    const isSelected = this.isSelected(n.profile.id);\n                    return (\n                      <TableRow\n                        hover\n                        onClick={event => this.handleClick(event, n.profile.id)}\n                        role=\"checkbox\"\n                        aria-checked={isSelected}\n                        tabIndex={-1}\n                        key={n.profile.id}\n                        selected={isSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox checked={isSelected} />\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Link to={{\n                            pathname: \"/app/client/\" + n.profile.id,\n                            state: {\n                              client: n,\n                              config: config,\n                              handlers: handlers\n                            }\n                          }} className=\"link-cta link-animated-hover link-hover-v1 text-primary\">{n.profile.name}\n                        </Link></TableCell>\n                        <TableCell><Tag tags={n.profile.tags} config={config} handlers={handlers} /></TableCell>\n                        <TableCell>{n.profile.company}</TableCell>\n                        <TableCell>{config.income[n.profile.income]}</TableCell>\n                        <TableCell>{n.note_summary}</TableCell>\n                        <TableCell>{n.profile.updated}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n                {emptyRows > 0 && (\n                  <TableRow style={{ height: 49 * emptyRows }}>\n                    <TableCell colSpan={6} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </div>\n          <TablePagination\n            component=\"div\"\n            count={clients.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            labelRowsPerPage=\"每頁數目\"\n            backIconButtonProps={{\n              'aria-label': '上一頁',\n            }}\n            nextIconButtonProps={{\n              'aria-label': '下一頁',\n            }}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\n          />\n        </Paper>\n      </>\n    );\n  }\n}\n\nClientList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst StyledClientList = withStyles(styles)(ClientList);\n\n\n\nexport default withRouter(StyledClientList);\n","import React from 'react';\nimport QueueAnim from 'rc-queue-anim';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\nimport Client from './components/Client';\nimport StatBoxes1 from './components/StatBoxes1';\n  import StatBoxes2 from './components/StatBoxes2';\nimport ClientList from './components/ClientList';\nimport './components/styles.scss';\nimport {getAuthfromCookie} from 'auth/Auth';\n\n\n\nexport default class ClientsPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n    }\n  }\n\n  componentDidMount() {\n    if (!getAuthfromCookie()) {\n      console.log('go login');\n      this.props.history.push('/user/login');\n    }\n  }\n\n\n  render() {\n    const { match } = this.props;\n    const { openClientDrawer } = this.state;\n\n    return (\n        <div>\n          <Switch>\n            <Route path={`${match.path}/:clientId`} component={Client} />\n\n            <Route path={match.path}>\n              <div className=\"container-fluid no-breadcrumb page-dashboard\">\n                <QueueAnim type=\"bottom\" className=\"ui-animate\">\n                    <div key=\"1\"><StatBoxes1 /></div>\n                    <div key=\"2\">\n                      <ClientList\n                        toggleClientDrawer={this.toggleClientDrawer}\n                        openClientDrawer={openClientDrawer}/>\n                    </div>\n                  </QueueAnim>\n              </div>\n            </Route>\n          </Switch>\n        </div>\n    );\n  }\n}\n"],"sourceRoot":""}